// Code generated by go-enum DO NOT EDIT.
// Version: 0.3.10
// Revision: 07a5b318d9ef317345f0cfca0c9347eda0e2bfc4
// Build Date: 2022-01-23T20:31:33Z
// Built By: goreleaser

package chronos

import (
	"fmt"
)

const (
	// DiZhiZi is a DiZhi of type Zi.
	DiZhiZi DiZhi = iota
	// DiZhiChou is a DiZhi of type Chou.
	DiZhiChou
	// DiZhiYin is a DiZhi of type Yin.
	DiZhiYin
	// DiZhiMao is a DiZhi of type Mao.
	DiZhiMao
	// DiZhiChen is a DiZhi of type Chen.
	DiZhiChen
	// DiZhiSi is a DiZhi of type Si.
	DiZhiSi
	// DiZhiWu is a DiZhi of type Wu.
	DiZhiWu
	// DiZhiWei is a DiZhi of type Wei.
	DiZhiWei
	// DiZhiShen is a DiZhi of type Shen.
	DiZhiShen
	// DiZhiYou is a DiZhi of type You.
	DiZhiYou
	// DiZhiXu is a DiZhi of type Xu.
	DiZhiXu
	// DiZhiHai is a DiZhi of type Hai.
	DiZhiHai
	// DiZhiMax is a DiZhi of type Max.
	DiZhiMax
)

const _DiZhiName = "ZiChouYinMaoChenSiWuWeiShenYouXuHaiMax"

var _DiZhiMap = map[DiZhi]string{
	DiZhiZi:   _DiZhiName[0:2],
	DiZhiChou: _DiZhiName[2:6],
	DiZhiYin:  _DiZhiName[6:9],
	DiZhiMao:  _DiZhiName[9:12],
	DiZhiChen: _DiZhiName[12:16],
	DiZhiSi:   _DiZhiName[16:18],
	DiZhiWu:   _DiZhiName[18:20],
	DiZhiWei:  _DiZhiName[20:23],
	DiZhiShen: _DiZhiName[23:27],
	DiZhiYou:  _DiZhiName[27:30],
	DiZhiXu:   _DiZhiName[30:32],
	DiZhiHai:  _DiZhiName[32:35],
	DiZhiMax:  _DiZhiName[35:38],
}

// String implements the Stringer interface.
func (x DiZhi) String() string {
	if str, ok := _DiZhiMap[x]; ok {
		return str
	}
	return fmt.Sprintf("DiZhi(%d)", x)
}

var _DiZhiValue = map[string]DiZhi{
	_DiZhiName[0:2]:   DiZhiZi,
	_DiZhiName[2:6]:   DiZhiChou,
	_DiZhiName[6:9]:   DiZhiYin,
	_DiZhiName[9:12]:  DiZhiMao,
	_DiZhiName[12:16]: DiZhiChen,
	_DiZhiName[16:18]: DiZhiSi,
	_DiZhiName[18:20]: DiZhiWu,
	_DiZhiName[20:23]: DiZhiWei,
	_DiZhiName[23:27]: DiZhiShen,
	_DiZhiName[27:30]: DiZhiYou,
	_DiZhiName[30:32]: DiZhiXu,
	_DiZhiName[32:35]: DiZhiHai,
	_DiZhiName[35:38]: DiZhiMax,
}

// ParseDiZhi attempts to convert a string to a DiZhi.
func ParseDiZhi(name string) (DiZhi, error) {
	if x, ok := _DiZhiValue[name]; ok {
		return x, nil
	}
	return DiZhi(0), fmt.Errorf("%s is not a valid DiZhi", name)
}

// MarshalText implements the text marshaller method.
func (x DiZhi) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *DiZhi) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseDiZhi(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// GanZhiJiaZi is a GanZhi of type JiaZi.
	GanZhiJiaZi GanZhi = iota
	// GanZhiYiChou is a GanZhi of type YiChou.
	GanZhiYiChou
	// GanZhiBingYin is a GanZhi of type BingYin.
	GanZhiBingYin
	// GanZhiDingMao is a GanZhi of type DingMao.
	GanZhiDingMao
	// GanZhiWuChen is a GanZhi of type WuChen.
	GanZhiWuChen
	// GanZhiJiSi is a GanZhi of type JiSi.
	GanZhiJiSi
	// GanZhiGengWu is a GanZhi of type GengWu.
	GanZhiGengWu
	// GanZhiXinWei is a GanZhi of type XinWei.
	GanZhiXinWei
	// GanZhiRenShen is a GanZhi of type RenShen.
	GanZhiRenShen
	// GanZhiGuiYou is a GanZhi of type GuiYou.
	GanZhiGuiYou
	// GanZhiJiaXu is a GanZhi of type JiaXu.
	GanZhiJiaXu
	// GanZhiYiHai is a GanZhi of type YiHai.
	GanZhiYiHai
	// GanZhiBingZi is a GanZhi of type BingZi.
	GanZhiBingZi
	// GanZhiDingChou is a GanZhi of type DingChou.
	GanZhiDingChou
	// GanZhiWuYin is a GanZhi of type WuYin.
	GanZhiWuYin
	// GanZhiJiMao is a GanZhi of type JiMao.
	GanZhiJiMao
	// GanZhiGengChen is a GanZhi of type GengChen.
	GanZhiGengChen
	// GanZhiXinSi is a GanZhi of type XinSi.
	GanZhiXinSi
	// GanZhiRenWu is a GanZhi of type RenWu.
	GanZhiRenWu
	// GanZhiGuiWei is a GanZhi of type GuiWei.
	GanZhiGuiWei
	// GanZhiJiaShen is a GanZhi of type JiaShen.
	GanZhiJiaShen
	// GanZhiYiYou is a GanZhi of type YiYou.
	GanZhiYiYou
	// GanZhiBingXu is a GanZhi of type BingXu.
	GanZhiBingXu
	// GanZhiDingHai is a GanZhi of type DingHai.
	GanZhiDingHai
	// GanZhiWuZi is a GanZhi of type WuZi.
	GanZhiWuZi
	// GanZhiJiChou is a GanZhi of type JiChou.
	GanZhiJiChou
	// GanZhiGengYin is a GanZhi of type GengYin.
	GanZhiGengYin
	// GanZhiXinMao is a GanZhi of type XinMao.
	GanZhiXinMao
	// GanZhiRenChen is a GanZhi of type RenChen.
	GanZhiRenChen
	// GanZhiGuiSi is a GanZhi of type GuiSi.
	GanZhiGuiSi
	// GanZhiJiaWu is a GanZhi of type JiaWu.
	GanZhiJiaWu
	// GanZhiYiWei is a GanZhi of type YiWei.
	GanZhiYiWei
	// GanZhiBingShen is a GanZhi of type BingShen.
	GanZhiBingShen
	// GanZhiDingYou is a GanZhi of type DingYou.
	GanZhiDingYou
	// GanZhiWuXu is a GanZhi of type WuXu.
	GanZhiWuXu
	// GanZhiJiHai is a GanZhi of type JiHai.
	GanZhiJiHai
	// GanZhiGengZi is a GanZhi of type GengZi.
	GanZhiGengZi
	// GanZhiXinChou is a GanZhi of type XinChou.
	GanZhiXinChou
	// GanZhiRenYin is a GanZhi of type RenYin.
	GanZhiRenYin
	// GanZhiGuiMao is a GanZhi of type GuiMao.
	GanZhiGuiMao
	// GanZhiJiaChen is a GanZhi of type JiaChen.
	GanZhiJiaChen
	// GanZhiYiSi is a GanZhi of type YiSi.
	GanZhiYiSi
	// GanZhiBingWu is a GanZhi of type BingWu.
	GanZhiBingWu
	// GanZhiDingWei is a GanZhi of type DingWei.
	GanZhiDingWei
	// GanZhiWuShen is a GanZhi of type WuShen.
	GanZhiWuShen
	// GanZhiJiYou is a GanZhi of type JiYou.
	GanZhiJiYou
	// GanZhiGengXu is a GanZhi of type GengXu.
	GanZhiGengXu
	// GanZhiXinHai is a GanZhi of type XinHai.
	GanZhiXinHai
	// GanZhiRenZi is a GanZhi of type RenZi.
	GanZhiRenZi
	// GanZhiGuiChou is a GanZhi of type GuiChou.
	GanZhiGuiChou
	// GanZhiJiaYin is a GanZhi of type JiaYin.
	GanZhiJiaYin
	// GanZhiYiMao is a GanZhi of type YiMao.
	GanZhiYiMao
	// GanZhiBingChen is a GanZhi of type BingChen.
	GanZhiBingChen
	// GanZhiDingSi is a GanZhi of type DingSi.
	GanZhiDingSi
	// GanZhiWuWu is a GanZhi of type WuWu.
	GanZhiWuWu
	// GanZhiJiWei is a GanZhi of type JiWei.
	GanZhiJiWei
	// GanZhiGengShen is a GanZhi of type GengShen.
	GanZhiGengShen
	// GanZhiXinYou is a GanZhi of type XinYou.
	GanZhiXinYou
	// GanZhiRenXu is a GanZhi of type RenXu.
	GanZhiRenXu
	// GanZhiGuiHai is a GanZhi of type GuiHai.
	GanZhiGuiHai
	// GanZhiMax is a GanZhi of type Max.
	GanZhiMax
)

const _GanZhiName = "JiaZiYiChouBingYinDingMaoWuChenJiSiGengWuXinWeiRenShenGuiYouJiaXuYiHaiBingZiDingChouWuYinJiMaoGengChenXinSiRenWuGuiWeiJiaShenYiYouBingXuDingHaiWuZiJiChouGengYinXinMaoRenChenGuiSiJiaWuYiWeiBingShenDingYouWuXuJiHaiGengZiXinChouRenYinGuiMaoJiaChenYiSiBingWuDingWeiWuShenJiYouGengXuXinHaiRenZiGuiChouJiaYinYiMaoBingChenDingSiWuWuJiWeiGengShenXinYouRenXuGuiHaiMax"

var _GanZhiMap = map[GanZhi]string{
	GanZhiJiaZi:    _GanZhiName[0:5],
	GanZhiYiChou:   _GanZhiName[5:11],
	GanZhiBingYin:  _GanZhiName[11:18],
	GanZhiDingMao:  _GanZhiName[18:25],
	GanZhiWuChen:   _GanZhiName[25:31],
	GanZhiJiSi:     _GanZhiName[31:35],
	GanZhiGengWu:   _GanZhiName[35:41],
	GanZhiXinWei:   _GanZhiName[41:47],
	GanZhiRenShen:  _GanZhiName[47:54],
	GanZhiGuiYou:   _GanZhiName[54:60],
	GanZhiJiaXu:    _GanZhiName[60:65],
	GanZhiYiHai:    _GanZhiName[65:70],
	GanZhiBingZi:   _GanZhiName[70:76],
	GanZhiDingChou: _GanZhiName[76:84],
	GanZhiWuYin:    _GanZhiName[84:89],
	GanZhiJiMao:    _GanZhiName[89:94],
	GanZhiGengChen: _GanZhiName[94:102],
	GanZhiXinSi:    _GanZhiName[102:107],
	GanZhiRenWu:    _GanZhiName[107:112],
	GanZhiGuiWei:   _GanZhiName[112:118],
	GanZhiJiaShen:  _GanZhiName[118:125],
	GanZhiYiYou:    _GanZhiName[125:130],
	GanZhiBingXu:   _GanZhiName[130:136],
	GanZhiDingHai:  _GanZhiName[136:143],
	GanZhiWuZi:     _GanZhiName[143:147],
	GanZhiJiChou:   _GanZhiName[147:153],
	GanZhiGengYin:  _GanZhiName[153:160],
	GanZhiXinMao:   _GanZhiName[160:166],
	GanZhiRenChen:  _GanZhiName[166:173],
	GanZhiGuiSi:    _GanZhiName[173:178],
	GanZhiJiaWu:    _GanZhiName[178:183],
	GanZhiYiWei:    _GanZhiName[183:188],
	GanZhiBingShen: _GanZhiName[188:196],
	GanZhiDingYou:  _GanZhiName[196:203],
	GanZhiWuXu:     _GanZhiName[203:207],
	GanZhiJiHai:    _GanZhiName[207:212],
	GanZhiGengZi:   _GanZhiName[212:218],
	GanZhiXinChou:  _GanZhiName[218:225],
	GanZhiRenYin:   _GanZhiName[225:231],
	GanZhiGuiMao:   _GanZhiName[231:237],
	GanZhiJiaChen:  _GanZhiName[237:244],
	GanZhiYiSi:     _GanZhiName[244:248],
	GanZhiBingWu:   _GanZhiName[248:254],
	GanZhiDingWei:  _GanZhiName[254:261],
	GanZhiWuShen:   _GanZhiName[261:267],
	GanZhiJiYou:    _GanZhiName[267:272],
	GanZhiGengXu:   _GanZhiName[272:278],
	GanZhiXinHai:   _GanZhiName[278:284],
	GanZhiRenZi:    _GanZhiName[284:289],
	GanZhiGuiChou:  _GanZhiName[289:296],
	GanZhiJiaYin:   _GanZhiName[296:302],
	GanZhiYiMao:    _GanZhiName[302:307],
	GanZhiBingChen: _GanZhiName[307:315],
	GanZhiDingSi:   _GanZhiName[315:321],
	GanZhiWuWu:     _GanZhiName[321:325],
	GanZhiJiWei:    _GanZhiName[325:330],
	GanZhiGengShen: _GanZhiName[330:338],
	GanZhiXinYou:   _GanZhiName[338:344],
	GanZhiRenXu:    _GanZhiName[344:349],
	GanZhiGuiHai:   _GanZhiName[349:355],
	GanZhiMax:      _GanZhiName[355:358],
}

// String implements the Stringer interface.
func (x GanZhi) String() string {
	if str, ok := _GanZhiMap[x]; ok {
		return str
	}
	return fmt.Sprintf("GanZhi(%d)", x)
}

var _GanZhiValue = map[string]GanZhi{
	_GanZhiName[0:5]:     GanZhiJiaZi,
	_GanZhiName[5:11]:    GanZhiYiChou,
	_GanZhiName[11:18]:   GanZhiBingYin,
	_GanZhiName[18:25]:   GanZhiDingMao,
	_GanZhiName[25:31]:   GanZhiWuChen,
	_GanZhiName[31:35]:   GanZhiJiSi,
	_GanZhiName[35:41]:   GanZhiGengWu,
	_GanZhiName[41:47]:   GanZhiXinWei,
	_GanZhiName[47:54]:   GanZhiRenShen,
	_GanZhiName[54:60]:   GanZhiGuiYou,
	_GanZhiName[60:65]:   GanZhiJiaXu,
	_GanZhiName[65:70]:   GanZhiYiHai,
	_GanZhiName[70:76]:   GanZhiBingZi,
	_GanZhiName[76:84]:   GanZhiDingChou,
	_GanZhiName[84:89]:   GanZhiWuYin,
	_GanZhiName[89:94]:   GanZhiJiMao,
	_GanZhiName[94:102]:  GanZhiGengChen,
	_GanZhiName[102:107]: GanZhiXinSi,
	_GanZhiName[107:112]: GanZhiRenWu,
	_GanZhiName[112:118]: GanZhiGuiWei,
	_GanZhiName[118:125]: GanZhiJiaShen,
	_GanZhiName[125:130]: GanZhiYiYou,
	_GanZhiName[130:136]: GanZhiBingXu,
	_GanZhiName[136:143]: GanZhiDingHai,
	_GanZhiName[143:147]: GanZhiWuZi,
	_GanZhiName[147:153]: GanZhiJiChou,
	_GanZhiName[153:160]: GanZhiGengYin,
	_GanZhiName[160:166]: GanZhiXinMao,
	_GanZhiName[166:173]: GanZhiRenChen,
	_GanZhiName[173:178]: GanZhiGuiSi,
	_GanZhiName[178:183]: GanZhiJiaWu,
	_GanZhiName[183:188]: GanZhiYiWei,
	_GanZhiName[188:196]: GanZhiBingShen,
	_GanZhiName[196:203]: GanZhiDingYou,
	_GanZhiName[203:207]: GanZhiWuXu,
	_GanZhiName[207:212]: GanZhiJiHai,
	_GanZhiName[212:218]: GanZhiGengZi,
	_GanZhiName[218:225]: GanZhiXinChou,
	_GanZhiName[225:231]: GanZhiRenYin,
	_GanZhiName[231:237]: GanZhiGuiMao,
	_GanZhiName[237:244]: GanZhiJiaChen,
	_GanZhiName[244:248]: GanZhiYiSi,
	_GanZhiName[248:254]: GanZhiBingWu,
	_GanZhiName[254:261]: GanZhiDingWei,
	_GanZhiName[261:267]: GanZhiWuShen,
	_GanZhiName[267:272]: GanZhiJiYou,
	_GanZhiName[272:278]: GanZhiGengXu,
	_GanZhiName[278:284]: GanZhiXinHai,
	_GanZhiName[284:289]: GanZhiRenZi,
	_GanZhiName[289:296]: GanZhiGuiChou,
	_GanZhiName[296:302]: GanZhiJiaYin,
	_GanZhiName[302:307]: GanZhiYiMao,
	_GanZhiName[307:315]: GanZhiBingChen,
	_GanZhiName[315:321]: GanZhiDingSi,
	_GanZhiName[321:325]: GanZhiWuWu,
	_GanZhiName[325:330]: GanZhiJiWei,
	_GanZhiName[330:338]: GanZhiGengShen,
	_GanZhiName[338:344]: GanZhiXinYou,
	_GanZhiName[344:349]: GanZhiRenXu,
	_GanZhiName[349:355]: GanZhiGuiHai,
	_GanZhiName[355:358]: GanZhiMax,
}

// ParseGanZhi attempts to convert a string to a GanZhi.
func ParseGanZhi(name string) (GanZhi, error) {
	if x, ok := _GanZhiValue[name]; ok {
		return x, nil
	}
	return GanZhi(0), fmt.Errorf("%s is not a valid GanZhi", name)
}

// MarshalText implements the text marshaller method.
func (x GanZhi) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *GanZhi) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseGanZhi(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// TianGanJia is a TianGan of type Jia.
	TianGanJia TianGan = iota
	// TianGanYi is a TianGan of type Yi.
	TianGanYi
	// TianGanBing is a TianGan of type Bing.
	TianGanBing
	// TianGanDing is a TianGan of type Ding.
	TianGanDing
	// TianGanWu is a TianGan of type Wu.
	TianGanWu
	// TianGanJi is a TianGan of type Ji.
	TianGanJi
	// TianGanGeng is a TianGan of type Geng.
	TianGanGeng
	// TianGanXin is a TianGan of type Xin.
	TianGanXin
	// TianGanRen is a TianGan of type Ren.
	TianGanRen
	// TianGanGui is a TianGan of type Gui.
	TianGanGui
	// TianGanMax is a TianGan of type Max.
	TianGanMax
)

const _TianGanName = "JiaYiBingDingWuJiGengXinRenGuiMax"

var _TianGanMap = map[TianGan]string{
	TianGanJia:  _TianGanName[0:3],
	TianGanYi:   _TianGanName[3:5],
	TianGanBing: _TianGanName[5:9],
	TianGanDing: _TianGanName[9:13],
	TianGanWu:   _TianGanName[13:15],
	TianGanJi:   _TianGanName[15:17],
	TianGanGeng: _TianGanName[17:21],
	TianGanXin:  _TianGanName[21:24],
	TianGanRen:  _TianGanName[24:27],
	TianGanGui:  _TianGanName[27:30],
	TianGanMax:  _TianGanName[30:33],
}

// String implements the Stringer interface.
func (x TianGan) String() string {
	if str, ok := _TianGanMap[x]; ok {
		return str
	}
	return fmt.Sprintf("TianGan(%d)", x)
}

var _TianGanValue = map[string]TianGan{
	_TianGanName[0:3]:   TianGanJia,
	_TianGanName[3:5]:   TianGanYi,
	_TianGanName[5:9]:   TianGanBing,
	_TianGanName[9:13]:  TianGanDing,
	_TianGanName[13:15]: TianGanWu,
	_TianGanName[15:17]: TianGanJi,
	_TianGanName[17:21]: TianGanGeng,
	_TianGanName[21:24]: TianGanXin,
	_TianGanName[24:27]: TianGanRen,
	_TianGanName[27:30]: TianGanGui,
	_TianGanName[30:33]: TianGanMax,
}

// ParseTianGan attempts to convert a string to a TianGan.
func ParseTianGan(name string) (TianGan, error) {
	if x, ok := _TianGanValue[name]; ok {
		return x, nil
	}
	return TianGan(0), fmt.Errorf("%s is not a valid TianGan", name)
}

// MarshalText implements the text marshaller method.
func (x TianGan) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *TianGan) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseTianGan(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
